package edu.ufp.sd.minesweeper.client;

import edu.ufp.sd.minesweeper.server.MinesweeperServerImpl;
import edu.ufp.sd.minesweeper.server.MinesweeperServerRI;
import edu.ufp.sd.minesweeper.server.State;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import minefield.Driver;


public class MinesweeperClientHallGUI extends javax.swing.JFrame implements WindowListener {

    private MinesweeperClientImpl msClient;
    private DefaultListModel<String> roomslist = new DefaultListModel<>();
    private DefaultComboBoxModel<String> levelslist = new DefaultComboBoxModel<>();
    
    private MinesweeperServerImpl msServerImpl;
    private MinesweeperServerRI msServerRI;
    
    public MinesweeperServerRI getMsServerRI() {
        return msServerRI;
    }

    public void setMsServerRI(MinesweeperServerRI msServerRI) {
        this.msServerRI = msServerRI;
    }
    
    private MinesweeperClientRI msClientRI;

    public MinesweeperClientRI getMsClientRI() {
        return msClientRI;
    }

    public void setMsClientRI(MinesweeperClientRI msClientRI) {
        this.msClientRI = msClientRI;
    }
    

    /**
     * Creates new form MineSweeperClientHallGUI
     */
    public MinesweeperClientHallGUI(MinesweeperClientImpl msClient, MinesweeperServerRI msServerRI) throws RemoteException {
        this.msClient = msClient;
        this.msServerRI = msServerRI;
        initComponents();
        this.setVisible(true);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.addWindowListener(this);
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpLobby = new javax.swing.JPanel();
        btnNewRoom = new javax.swing.JButton();
        jcbGameMode = new javax.swing.JComboBox<>();
        lblWelcome = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlRooms = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnNewRoom.setText("New Room");
        btnNewRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewRoomActionPerformed(evt);
            }
        });

        jcbGameMode.setModel(levelslist);
        jcbGameMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbGameModeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpLobbyLayout = new javax.swing.GroupLayout(jpLobby);
        jpLobby.setLayout(jpLobbyLayout);
        jpLobbyLayout.setHorizontalGroup(
            jpLobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLobbyLayout.createSequentialGroup()
                .addComponent(jcbGameMode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNewRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpLobbyLayout.setVerticalGroup(
            jpLobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLobbyLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jcbGameMode))
            .addComponent(btnNewRoom)
        );

        lblWelcome.setText("Hello, welcome");

        jlRooms.setModel(roomslist);
        jlRooms.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlRooms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlRoomsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jlRooms);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcome)
                    .addComponent(jpLobby, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblWelcome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpLobby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initCustomComponents() throws RemoteException {
        this.lblWelcome.setText("Bem-vindo " + msClient.getUsername() + "!");
        try {
            String[] modos = {"Expert", "Medium", "Junior"};
            for (String modo : modos) {
                this.levelslist.addElement(modo);
            }

            ArrayList<String> rooms = this.msClient.msServerRI.fetchAvaliableRooms();
            if (!rooms.isEmpty()) {
                for (String room : rooms) {
                    this.roomslist.addElement(room);
                }
            }

        } catch (RemoteException ex) {
            Logger.getLogger(MinesweeperClientHallGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btnNewRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewRoomActionPerformed
        
        String name = "Minesweeper Room " + roomslist.size()
                + " - Modo: " + this.jcbGameMode.getSelectedItem().toString();
        
        String option = this.jcbGameMode.getSelectedItem().toString();
        System.out.println(option);
        try {
            switch (option) {
                case "Expert":{
                    msServerRI.createGameRoom(name, 2, 4, 30, 20, 130, "EXPERT");
                    System.out.println("Expert Mode");
                    break;
                }
                case "Medium":{
                    msServerRI.createGameRoom(name, 2, 4, 20, 15, 60, "MEDIUM");
                    System.out.println("Medium Mode");
                    break;
                }
                case "Junior":{
                    msServerRI.createGameRoom(name, 2, 4, 15, 10 ,15, "JUNIOR");
                    System.out.println("Junior Mode");
                    break;
                }
                default : {
                    System.out.println("Opção invalida");
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(MinesweeperClientHallGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNewRoomActionPerformed
    
    private void jlRoomsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlRoomsMouseClicked
        JList theList = (JList) evt.getSource();
        if (evt.getClickCount() == 2) {
            int index = theList.locationToIndex(evt.getPoint());
            if (index >= 0) {
                Object o = theList.getModel().getElementAt(index);
                try {
                    msServerRI.attachGame((MinesweeperClientRI)msClient, o.toString());
                    System.out.println(o.toString());
                    new Driver(this.msServerRI, (MinesweeperClientRI)msClient, o.toString(), this);
                    msServerRI.restartGame(o.toString());
                } catch (RemoteException ex) {
                    Logger.getLogger(MinesweeperClientHallGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jlRoomsMouseClicked

    private void jcbGameModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbGameModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbGameModeActionPerformed

    public void addNewRoom(State.NewRoom nr) {
        this.roomslist.addElement(nr.getRoomName());
    }

    public void updateAllRooms() {
        System.out.println("updateAllRooms()");
        try {
            ArrayList<String> rooms = this.msClient.msServerRI.fetchAvaliableRooms();
            if (!rooms.isEmpty()) {
                for (String room : rooms) {
                    System.out.println("Room: " + room);
                    this.roomslist.addElement(room);
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(MinesweeperClientHallGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewRoom;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcbGameMode;
    private javax.swing.JList<String> jlRooms;
    private javax.swing.JPanel jpLobby;
    private javax.swing.JLabel lblWelcome;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
    }

    @Override
    public void windowClosing(WindowEvent e) {
        msClient.triggeredLogout(msClient.getUsername(), msClient.getPassword());
    }

    @Override
    public void windowClosed(WindowEvent e) {
    }

    @Override
    public void windowIconified(WindowEvent e) {
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
    }

    @Override
    public void windowActivated(WindowEvent e) {
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
    }
}
